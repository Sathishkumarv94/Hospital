{"ast":null,"code":"var _jsxFileName = \"D:\\\\node\\\\MERN Stack\\\\my-app\\\\src\\\\Components\\\\Hospital\\\\Hospital.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hospital() {\n  _s();\n  const [booking, setBooking] = useState();\n  useEffect(() => {\n    const fetchBooking = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/appointments');\n        setBooking(response.data);\n      } catch (error) {\n        console.error(\"Error fetching the appointments data\", error);\n      }\n    };\n    fetchbooking();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Appointments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: appointment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(appointment.date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, appointment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Hospital, \"8anS1oUDyV8mIHQoy8naJQn9VwA=\");\n_c = Hospital;\nexport default Hospital;\nvar _c;\n$RefreshReg$(_c, \"Hospital\");","map":{"version":3,"names":["React","useEffect","useState","Header","Footer","axios","jsxDEV","_jsxDEV","Hospital","_s","booking","setBooking","fetchBooking","response","get","data","error","console","fetchbooking","children","fileName","_jsxFileName","lineNumber","columnNumber","className","appointments","map","appointment","name","Date","date","toLocaleString","_id","_c","$RefreshReg$"],"sources":["D:/node/MERN Stack/my-app/src/Components/Hospital/Hospital.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Hospital(){\r\n    const [booking,setBooking]=useState()\r\n    useEffect(() => {\r\n        const fetchBooking = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/appointments');\r\n                setBooking(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching the appointments data\", error);\r\n            }\r\n        };\r\n\r\n        fetchbooking();\r\n    }, []);\r\n    return(\r\n        <div>\r\n              <Header />\r\n            <section className=\"Appointments\">\r\n                <h1 className='text-primary'>Appointments</h1>\r\n                <ul>\r\n                    {appointments.map(appointment => (\r\n                        <li key={appointment._id}>\r\n                            <h3>{appointment.name}</h3>\r\n                            <p>{new Date(appointment.date).toLocaleString()}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hospital "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACT,QAAQ,CAAC,CAAC;EACrCD,SAAS,CAAC,MAAM;IACZ,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,oCAAoC,CAAC;QACtEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ,CAAC;IAEDE,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIX,OAAA;IAAAY,QAAA,gBACMZ,OAAA,CAACJ,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZhB,OAAA;MAASiB,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC7BZ,OAAA;QAAIiB,SAAS,EAAC,cAAc;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9ChB,OAAA;QAAAY,QAAA,EACKM,YAAY,CAACC,GAAG,CAACC,WAAW,iBACzBpB,OAAA;UAAAY,QAAA,gBACIZ,OAAA;YAAAY,QAAA,EAAKQ,WAAW,CAACC;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BhB,OAAA;YAAAY,QAAA,EAAI,IAAIU,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAF/CI,WAAW,CAACK,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGpB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACVhB,OAAA,CAACH,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAACd,EAAA,CA/BQD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAiCjB,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}